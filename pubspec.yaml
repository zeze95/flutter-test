name: my_test
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.7.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  # iOS 스타일 아이콘 (Cupertino 디자인)
  cupertino_icons: ^1.0.8

  # HTTP 요청을 위한 네트워크 라이브러리 (REST API 호출)
  dio: ^5.8.0+1

  # Riverpod 상태 관리 라이브러리
  flutter_riverpod: ^2.6.1

  # 날짜/시간 처리를 위한 라이브러리
  intl:

  # Dio 기반의 REST API 호출을 쉽게 도와주는 라이브러리
  retrofit: ^4.4.2
  retrofit_generator: ^9.1.9

  # JSON 직렬화/역직렬화를 위한 라이브러리
  json_annotation: ^4.8.1

  # 간단한 로컬 데이터 저장 (예: 앱 설정, 캐시)
  shared_preferences: ^2.2.2

  # 토스트 메세지
  fluttertoast: ^8.2.1

  # 보안이 필요한 데이터 저장 (예: JWT 토큰)
  flutter_secure_storage: ^9.0.0

  # Firebase 푸쉬 알림 (FCM)
  firebase_messaging: ^14.7.10

  # 앱 내부 알림 표시 (로컬 알림)
  flutter_local_notifications: ^16.3.2

  # 백그라운드 작업 처리 (예: 자동 주문 업데이트)
  workmanager: ^0.5.2

  # 위치 정보(GPS) 가져오기
  geolocator: ^10.1.0

  # Google Maps 연동 (지도 표시)
  google_maps_flutter: ^2.5.0

  # 지도에서 경로 그리기 (예: 배송 경로)
  flutter_polyline_points: ^2.0.0

  # SVG 이미지 사용
  flutter_svg: ^2.0.10+1

  # JSON 기반의 애니메이션 효과 (Lottie)
  lottie: ^2.7.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  assets:
    - assets/images/
    - assets/json/
    - assets/icons/
  # fonts:

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
